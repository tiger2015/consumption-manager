<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tiger.consumption.manager.dao.ConsumptionRecordDao">
    <resultMap id="consumptionRecord" type="com.tiger.consumption.manager.model.ConsumptionRecord">
        <result column="id" property="id"/>
        <result column="consumption_type_id" property="consumptionType.id"/>
        <result column="consumption_type_name" property="consumptionType.name"/>
        <result column="pay_type_id" property="payType.id"/>
        <result column="pay_type_name" property="payType.name"/>
        <result column="time" property="time"/>
        <result column="amount" property="amount"/>
        <result column="comment" property="comment"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <insert id="insert" parameterType="com.tiger.consumption.manager.model.ConsumptionRecord">
        insert into consumption_record(`type`, `pay_type`, `time`, `amount`, `comment`) values(#{consumptionType.id}, #{payType.id}, #{time}, #{amount}, #{comment})
    </insert>

    <select id="selectAll" resultMap="consumptionRecord">
        select t1.`id`, t1.`time`, t1.`amount`, t1.`comment`, t1.`create_time`,  t2.`id` as consumption_type_id, t2.`name` as consumption_type_name , t3.`id` as pay_type_id, t3.`name` as pay_type_name from `consumption_record` t1, `consumption_type` t2, `pay_type` t3
        where t1.`type` = t2.`id`  and t1.`pay_type` = t3.`id` order by `time` desc
    </select>

    <update id="update" parameterType="com.tiger.consumption.manager.model.ConsumptionRecord">
        update `consumption_record` set
        <if test="consumptionType != null">
            `type`=#{consumptionType.id},
        </if>
        <if test="payType != null">
            `pay_type`=#{payType.id},
        </if>
        `time`=#{time},`amount`=#{amount},`comment`=#{comment} where `id`=#{id}
    </update>

    <delete id="delete">
        delete from `consumption_record` where `id` in
        <foreach collection="ids" item="id" open="(" separator="," close=")" index="index">
            #{id}
        </foreach>
    </delete>

    <select id="selectById" resultMap="consumptionRecord">
         select t1.`id`, t1.`time`, t1.`amount`, t1.`comment`, t1.`create_time`, t2.`id` as consumption_type_id, t2.`name` as consumption_type_name , t3.`id` as pay_type_id,  t3.`name` as pay_type_name from `consumption_record` t1, `consumption_type` t2, `pay_type` t3
        where t1.`type` = t2.`id`  and t1.`pay_type` = t3.`id` and t1.`id`=#{id}
    </select>

    <select id="selectByCondition" resultMap="consumptionRecord">
             select t1.`id`, t1.`time`, t1.`amount`, t1.`comment`, t1.`create_time`, t2.`id` as consumption_type_id, t2.`name` as consumption_type_name , t3.`id` as pay_type_id,  t3.`name` as pay_type_name from `consumption_record` t1, `consumption_type` t2, `pay_type` t3
        where  t1.`type` = t2.`id`  and t1.`pay_type` = t3.`id`
        and   <![CDATA[ t1.time >= #{begin, jdbcType=DATE} AND t1.time <= #{end, jdbcType=DATE}]]>
        <if test="consumptionType != null and  consumptionType.id != -1">
            and t1.`type`=#{consumptionType.id}
        </if>
        <if test="payType != null and payType.id != -1">
            and t1.`pay_type` = #{payType.id}
        </if>
         order by `time` desc
    </select>
</mapper>